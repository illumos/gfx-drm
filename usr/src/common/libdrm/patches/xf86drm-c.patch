diff ... libdrm-2.4.109/xf86drm.c
--- libdrm-2.4.109-ref/xf86drm.c	Thu Nov 25 15:33:02 2021
+++ libdrm-2.4.109/xf86drm.c	Mon Jan  3 17:41:28 2022
@@ -97,6 +97,11 @@
 #endif
 #endif /* __OpenBSD__ */
 
+#if defined(__sun)
+/* Device majors are dynamic. */
+#define DRM_MAJOR      (_sun_drm_get_major())
+#endif /* __sun */
+
 #ifndef DRM_MAJOR
 #define DRM_MAJOR 226 /* Linux */
 #endif
@@ -805,9 +810,14 @@
     if (stat(DRM_DIR_NAME, &st)) {
         if (!isroot)
             return DRM_ERR_NOT_ROOT;
+#if defined(__sun)
+	/* Let the system do this. */
+	return DRM_ERR_NO_DEVICE;
+#else
         mkdir(DRM_DIR_NAME, DRM_DEV_DIRMODE);
         chown_check_return(DRM_DIR_NAME, 0, 0); /* root:root */
         chmod(DRM_DIR_NAME, DRM_DEV_DIRMODE);
+#endif
     }
 
     /* Check if the device node exists and create it if necessary. */
@@ -814,8 +824,13 @@
     if (stat(buf, &st)) {
         if (!isroot)
             return DRM_ERR_NOT_ROOT;
+#if defined(__sun)
+	/* Let the system do this. */
+	return DRM_ERR_NO_DEVICE;
+#else
         remove(buf);
         mknod(buf, S_IFCHR | devmode, dev);
+#endif
     }
 
     if (drm_server_info && drm_server_info->get_perms) {
@@ -997,6 +1012,7 @@
     }
 }
 
+#ifndef __sun /* Avoid "static unused" warning */
 static const char *drmGetMinorName(int type)
 {
     switch (type) {
@@ -1010,6 +1026,7 @@
         return NULL;
     }
 }
+#endif /* __sun */
 
 /**
  * Open the device by bus ID.
@@ -1573,7 +1590,7 @@
     drm_map_t map;
 
     memclear(map);
-    map.handle = (void *)(uintptr_t)handle;
+    map.handle = (int)(void *)(uintptr_t)handle;
 
     if(drmIoctl(fd, DRM_IOCTL_RM_MAP, &map))
         return -errno;
@@ -3244,6 +3261,16 @@
     fstat(fd, &sbuf);
     d = sbuf.st_rdev;
 
+#if defined(__sun)
+    /*
+     * Get rid of clone-open bits in the minor number,
+     * otherwise it will not match any /dev nodes.
+     * See: the drm driver drm_sun_open()
+     * Don't have DRM_CLONEID_NBITS here.
+     */
+    d &= ~0x3fe00;
+#endif
+
     for (i = 0; i < DRM_MAX_MINOR; i++) {
         snprintf(name, sizeof name, DRM_DEV_NAME, DRM_DIR_NAME, i);
         if (stat(name, &sbuf) == 0 && sbuf.st_rdev == d)
@@ -3431,6 +3458,25 @@
          id + drmGetMinorBase(type));
 
     return strdup(name);
+#elif defined(__sun)	/* illumos, OSol */
+	struct stat sbuf;
+	char *path = NULL;
+	int err, maj, min;
+
+	if (fstat(fd, &sbuf))
+		return (NULL);
+
+	maj = major(sbuf.st_rdev);
+	min = minor(sbuf.st_rdev);
+
+	if (maj != DRM_MAJOR || !S_ISCHR(sbuf.st_mode))
+		return (NULL);
+
+	/* Walk devices tree looking for this minor */
+	err = _sun_drm_find_device(min, &path);
+	if (err == 0)
+		return (path);
+	return (NULL);
 #else
     struct stat sbuf;
     char buf[PATH_MAX + 1];
@@ -3575,6 +3621,20 @@
     return subsystem_type;
 #elif defined(__OpenBSD__) || defined(__DragonFly__) || defined(__FreeBSD__)
     return DRM_BUS_PCI;
+#elif defined(__sun)	/* illumos, OSol */
+    char *path = NULL;
+    int ret;
+
+    if (maj != DRM_MAJOR)
+	    return -EINVAL;
+
+    ret = _sun_drm_find_device(min, &path);
+    if (ret != 0)
+	    return (ret);
+
+    ret = _sun_drm_get_subsystem(path);
+    free(path);
+    return (ret);
 #else
 #warning "Missing implementation of drmParseSubsystemType"
     return -EINVAL;
@@ -3710,6 +3770,21 @@
     return 0;
 #elif defined(__FreeBSD__)
     return get_sysctl_pci_bus_info(maj, min, info);
+#elif defined(__sun)	/* illumos, OSol */
+    char *path = NULL;
+    int err;
+
+    if (maj != DRM_MAJOR)
+	    return -EINVAL;
+
+    err = _sun_drm_find_device(min, &path);
+    if (err != 0)
+	    return (err);
+
+    err = _sun_drm_get_pci_bus_info(path, info);
+    free(path);
+
+    return err;
 #else
 #warning "Missing implementation of drmParsePciBusInfo"
     return -EINVAL;
@@ -3923,6 +3998,21 @@
     device->revision_id = results[0].pc_revid;
 
     return 0;
+#elif defined(__sun)	/* illumos, OSol */
+    char *path = NULL;
+    int err;
+
+    if (maj != DRM_MAJOR)
+	    return -EINVAL;
+
+    err = _sun_drm_find_device(min, &path);
+    if (err != 0)
+	    return (err);
+
+    err = _sun_drm_get_pci_dev_info(path, device);
+    free(path);
+
+    return err;
 #else
 #warning "Missing implementation of drmParsePciDeviceInfo"
     return -EINVAL;
@@ -4152,6 +4242,20 @@
     info->dev = dev;
 
     return 0;
+#elif defined(__sun)	/* illumos, OSol */
+    char *path = NULL;
+    int ret;
+
+    if (maj != DRM_MAJOR)
+	    return -EINVAL;
+
+    ret = _sun_drm_find_device(min, &path);
+    if (ret != 0)
+	    return (ret);
+
+    ret = _sun_drm_get_subsystem(path);
+    free(path);
+    return (ret);
 #else
 #warning "Missing implementation of drmParseUsbBusInfo"
     return -EINVAL;
@@ -4183,6 +4287,20 @@
     info->product = product;
 
     return 0;
+#elif defined(__sun)	/* illumos, OSol */
+    char *path = NULL;
+    int ret;
+
+    if (maj != DRM_MAJOR)
+	    return -EINVAL;
+
+    ret = _sun_drm_find_device(min, &path);
+    if (ret != 0)
+	    return (ret);
+
+    ret = _sun_drm_get_subsystem(path);
+    free(path);
+    return (ret);
 #else
 #warning "Missing implementation of drmParseUsbDeviceInfo"
     return -EINVAL;
@@ -4257,6 +4375,20 @@
     free(name);
 
     return 0;
+#elif defined(__sun)	/* illumos, OSol */
+    char *path = NULL;
+    int ret;
+
+    if (maj != DRM_MAJOR)
+	    return -EINVAL;
+
+    ret = _sun_drm_find_device(min, &path);
+    if (ret != 0)
+	    return (ret);
+
+    ret = _sun_drm_get_subsystem(path);
+    free(path);
+    return (ret);
 #else
 #warning "Missing implementation of drmParseOFBusInfo"
     return -EINVAL;
@@ -4317,6 +4449,20 @@
 
     free(*compatible);
     return err;
+#elif defined(__sun)	/* illumos, OSol */
+    char *path = NULL;
+    int ret;
+
+    if (maj != DRM_MAJOR)
+	    return -EINVAL;
+
+    ret = _sun_drm_find_device(min, &path);
+    if (ret != 0)
+	    return (ret);
+
+    ret = _sun_drm_get_subsystem(path);
+    free(path);
+    return (ret);
 #else
 #warning "Missing implementation of drmParseOFDeviceInfo"
     return -EINVAL;
